1)PIP						- Done
2)Understand Django				- Done
3)Understand Django architecture		- Done
4)Explore Template, view, model			- Done
5)Create Django project				- Done
6)Connect with MySql dtabase			- Done
7)Run Django server				- Done
8)Create MySql db tables through Django		- Done
9)Explore what is ORM				- Done

PIP ---> Prefered Installer Program, Performance Improvement Plan
	 It is a package management system, that used to install and manage python packages

DJANGO--->It is a Python web framework that follows Model-Template-Views(MVT) Architecture that helps to build
	  and maintain the web applications

MVT
1)Model---> It is a class and act as a interface.
	    Abstraction of database table (Hiding the database table behind the python objects)
	    We can create a table structure for database inside this model class
	    It is a data access layer which handles the data in database.

2)View---> It is used for recieving HTTP request and returning HTTP response
	   It is used to execute the business logic and interact with model to get the data and give it to template

3)Template---> It is a presentation layer that handles the UI part completely
	       It separate the design from python code and allow us to build dynamic web pages

ORM---> Object relational Mapper
	It is used to interact with the data from database.
	We can add, delete and modify the data in database using the database abstraction API(ORM).

Need of ORM---> It provides high level abstraction that allows developer to write a python code to 
		create, read, add, delete, modify data instead of writing sql query